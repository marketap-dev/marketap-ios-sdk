//
//  ShoppingHomeView.swift
//  MarketapSDK
//
//  Created by Ïù¥ÎèôÌòÑ on 2/19/25.
//

import SwiftUI
import MarketapSDK


struct ShoppingHomeView: View {
    @State private var selectedCategory: String = "Ï†ÑÏ≤¥"
    @State private var isShowingPurchase = false
    @State private var selectedProduct: (String, Double, String)? = nil // ‚úÖ Í∞ÄÍ≤©ÏùÑ DoubleÎ°ú Î≥ÄÍ≤Ω

    @State private var isShowingCart = false
    @State private var isShowingUserInfo = false
    @State private var cartItems: [CartItem] = []

    let categories = ["Ï†ÑÏ≤¥", "ÏùòÎ•ò", "Ï†ÑÏûêÏ†úÌíà", "Í∞ÄÍµ¨", "Ïä§Ìè¨Ï∏†", "ÎèÑÏÑú", "ÏùåÏãù", "Ï£ºÎ∞©Ïö©Ìíà", "ÏÉùÌôúÏö©Ìíà"]

    let products: [(String, Double, String)] = [
        ("Ìã∞ÏÖîÏ∏†", 19900, "ÏùòÎ•ò"),
        ("Ï≤≠Î∞îÏßÄ", 49900, "ÏùòÎ•ò"),
        ("Ïä§ÎßàÌä∏Ìè∞", 999000, "Ï†ÑÏûêÏ†úÌíà"),
        ("ÎÖ∏Ìä∏Î∂Å", 1490000, "Ï†ÑÏûêÏ†úÌíà"),
        ("ÌÉúÎ∏îÎ¶ø", 750000, "Ï†ÑÏûêÏ†úÌíà"),
        ("Î¨¥ÏÑ† Ïù¥Ïñ¥Ìè∞", 199000, "Ï†ÑÏûêÏ†úÌíà"),
        ("Ïä§ÎßàÌä∏ ÏõåÏπò", 299000, "Ï†ÑÏûêÏ†úÌíà"),
        ("ÏÜåÌåå", 890000, "Í∞ÄÍµ¨"),
        ("Ï±ÖÏÉÅ", 159000, "Í∞ÄÍµ¨"),
        ("ÏùòÏûê", 99000, "Í∞ÄÍµ¨"),
        ("Îü¨ÎãùÌôî", 129000, "Ïä§Ìè¨Ï∏†"),
        ("Ï∂ïÍµ¨Í≥µ", 35000, "Ïä§Ìè¨Ï∏†"),
        ("ÏöîÍ∞ÄÎß§Ìä∏", 45000, "Ïä§Ìè¨Ï∏†"),
        ("Ìó¨Ïä§ Ïû•Í∞ë", 29000, "Ïä§Ìè¨Ï∏†"),
        ("ÏÜåÏÑ§Ï±Ö", 12900, "ÎèÑÏÑú"),
        ("ÏöîÎ¶¨Ï±Ö", 22000, "ÎèÑÏÑú"),
        ("Í≥ºÌïôÏû°ÏßÄ", 15000, "ÎèÑÏÑú"),
        ("Ïª§ÌîºÎ®∏Ïã†", 199000, "Ï£ºÎ∞©Ïö©Ìíà"),
        ("ÌÜ†Ïä§ÌÑ∞", 49000, "Ï£ºÎ∞©Ïö©Ìíà"),
        ("Í≥µÍ∏∞Ï≤≠Ï†ïÍ∏∞", 350000, "ÏÉùÌôúÏö©Ìíà"),
        ("Ï†ÑÍ∏∞Ïû•Ìåê", 120000, "ÏÉùÌôúÏö©Ìíà"),
        ("ÌñÑÎ≤ÑÍ±∞ ÏÑ∏Ìä∏", 8900, "ÏùåÏãù"),
        ("Ï¥àÏΩúÎ¶ø", 5500, "ÏùåÏãù")
    ]

    /// üîπ ÏÑ†ÌÉùÌïú Ïπ¥ÌÖåÍ≥†Î¶¨Ïóê ÎßûÍ≤å ÏÉÅÌíà ÌïÑÌÑ∞ÎßÅ
    var filteredProducts: [(String, Double, String)] {
        if selectedCategory == "Ï†ÑÏ≤¥" {
            return products
        } else {
            return products.filter { $0.2 == selectedCategory }
        }
    }

    var body: some View {
        NavigationView {
            VStack {
                // üîπ Ïπ¥ÌÖåÍ≥†Î¶¨ ÏÑ†ÌÉù
                ScrollView(.horizontal, showsIndicators: false) {
                    HStack {
                        ForEach(categories, id: \.self) { category in
                            Text(category)
                                .padding(.vertical, 8)
                                .padding(.horizontal, 16)
                                .background(selectedCategory == category ? Color.blue : Color.gray.opacity(0.2))
                                .foregroundColor(selectedCategory == category ? .white : .black)
                                .cornerRadius(20)
                                .onTapGesture {
                                    selectedCategory = category
                                }
                        }
                    }
                    .padding(.horizontal)
                }

                // üîπ ÏÉÅÌíà Î™©Î°ù
                ScrollView {
                    LazyVGrid(columns: [GridItem(.flexible()), GridItem(.flexible())], spacing: 16) {
                        ForEach(filteredProducts, id: \.0) { product in
                            ProductCard(name: product.0, price: formatPrice(product.1)) {
                                self.selectedProduct = product
                                self.isShowingPurchase = true
                            }
                        }
                    }
                    .padding()
                }
            }
            .navigationTitle("Ìôà")
            .toolbar {
                ToolbarItem(placement: .navigationBarTrailing) {
                    HStack {
                        Button(action: { isShowingUserInfo = true }) {
                            Image(systemName: "person.crop.circle")
                        }
                        Button(action: { isShowingCart = true }) {
                            Image(systemName: "cart")
                        }
                    }
                }
            }
            .fullScreenCover(isPresented: $isShowingPurchase) {
                PurchaseView(product: $selectedProduct, cartItems: $cartItems, isPresented: $isShowingPurchase)
            }
            .fullScreenCover(isPresented: $isShowingCart) {
                CartView(cartItems: $cartItems, isPresented: $isShowingCart)
            }
            .fullScreenCover(isPresented: $isShowingUserInfo) {
                UserInfoView(isPresented: $isShowingUserInfo)
            }
            .onAppear {
                Marketap.trackPageView(eventProperties: ["mkt_page_title": "Ìôà"])
                loadCartItems()
            }
        }
    }

    /// ‚úÖ Í∞ÄÍ≤©ÏùÑ ‚Ç© (ÏõêÌôî) ÌòïÏãùÏúºÎ°ú Î≥ÄÌôò
    private func formatPrice(_ price: Double) -> String {
        let formatter = NumberFormatter()
        formatter.numberStyle = .currency
        formatter.currencySymbol = "‚Ç©"
        formatter.maximumFractionDigits = 0 // ÏÜåÏàòÏ†ê Ï†úÍ±∞
        return formatter.string(from: NSNumber(value: price)) ?? "‚Ç©\(Int(price))"
    }

    /// ‚úÖ Ïï± Ïã§Ìñâ Ïãú UserDefaultsÏóêÏÑú Ïû•Î∞îÍµ¨Îãà Îç∞Ïù¥ÌÑ∞ Î∂àÎü¨Ïò§Í∏∞
    private func loadCartItems() {
        if let savedData = UserDefaults.standard.data(forKey: "cartItems"),
           let decoded = try? JSONDecoder().decode([CartItem].self, from: savedData) {
            cartItems = decoded
        }
    }
}


// üîπ ÏÉÅÌíà Ïπ¥Îìú UI
struct ProductCard: View {
    let name: String
    let price: String
    let onPurchaseTap: () -> Void

    var body: some View {
        VStack(spacing: 8) {
            RoundedRectangle(cornerRadius: 10)
                .fill(Color.gray.opacity(0.2))
                .frame(height: 100)
                .overlay(Text("ÏÉÅÌíà Ïù¥ÎØ∏ÏßÄ").font(.caption))

            Text(name)
                .font(.headline)
            Text(price)
                .font(.subheadline)
                .foregroundColor(.gray)

            Button(action: onPurchaseTap) {
                Text("Íµ¨Îß§ÌïòÍ∏∞")
                    .frame(maxWidth: .infinity)
                    .padding(.vertical, 8)
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(8)
            }
        }
        .padding()
        .background(Color.white)
        .cornerRadius(12)
        .shadow(radius: 2)
    }
}

// üîπ ÎØ∏Î¶¨Î≥¥Í∏∞
struct ShoppingHomeView_Previews: PreviewProvider {
    static var previews: some View {
        ShoppingHomeView()
    }
}
